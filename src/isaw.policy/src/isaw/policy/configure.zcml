<configure
    xmlns="http://namespaces.zope.org/zope"
    xmlns:five="http://namespaces.zope.org/five"
    xmlns:i18n="http://namespaces.zope.org/i18n"
    xmlns:browser="http://namespaces.zope.org/browser"
    xmlns:plone="http://namespaces.plone.org/plone"
    xmlns:genericsetup="http://namespaces.zope.org/genericsetup"
    xmlns:zcml="http://namespaces.zope.org/zcml"
    i18n_domain="isaw.policy">

  <five:registerPackage package="." initialize=".initialize" />

  <includeDependencies package="." />

  <!-- These two need to be included explicitly for some reason: -->
  <include package="Products.CMFPlacefulWorkflow" />
  <include package="plone.app.iterate" />

  <include file="profile.zcml" />
  <include package=".vocabularies" />

  <!-- -*- extra stuff goes here -*- -->


  <browser:viewlet
      name="isaw.opengraph.metadata"
      template="metadata.pt"
      for="Products.CMFCore.interfaces.IDublinCore"
      manager="plone.app.layout.viewlets.interfaces.IHtmlHeadLinks"
      class=".metadata.OpenGraphTagViewlet"
      layer=".interfaces.IISAWPolicyLayer"
      permission="zope2.View"
      />

  <adapter
      factory=".purging.ImagePurgePaths"
      name="isaw.policy.baseimage" />

  <adapter
      for="plone.app.contenttypes.interfaces.INewsItem"
      factory=".purging.ImagePurgePaths"
      name="isaw.policy.baseimage" />

  <adapter
      factory=".purging.LeadimagePurgePaths"
      name="isaw.policy.leadimage" />

  <subscriber
      handler="plone.app.caching.purge.purgeOnModified"
      for="Products.CMFCore.interfaces.IContentish
           Products.DCWorkflow.interfaces.IAfterTransitionEvent" />

  <adapter
      for="Products.CMFCore.interfaces.IFolderish
           zope.publisher.interfaces.browser.IDefaultBrowserLayer
           plone.dexterity.interfaces.IDexterityFTI"
      provides="zope.publisher.interfaces.browser.IBrowserPage"
      factory=".interfaces.PublicationAddView"
      name="isaw.policy.publication"
      />
  <class class=".interfaces.PublicationAddView">
      <require
          permission="cmf.AddPortalContent"
          interface="zope.publisher.interfaces.browser.IBrowserPage"
          />
  </class>

  <permission
      id="plone.iterateCheckIn"
      title="iterate : Check in content"
      />

  <permission
      id="plone.iterateCheckOut"
      title="iterate : Check out content"
      />

  <configure package="plone.app.iterate.browser">
    <browser:page
        for="..interfaces.IIterateAware"
        name="content-checkin"
        class=".checkin.Checkin"
        template="checkin.pt"
        layer="isaw.policy.interfaces.IISAWPolicyLayer"
        permission="plone.iterateCheckOut"
        />
  </configure>

  <browser:page
      for="*"
      name="iterate_control"
      class=".iterate.ISAWIterateControl"
      layer="isaw.policy.interfaces.IISAWPolicyLayer"
      permission="zope2.View"
      allowed_attributes="checkin_allowed checkout_allowed cancel_allowed"
      />

  <browser:page
      for="Products.CMFPlone.interfaces.IPloneSiteRoot"
      name="setup-saml2"
      class=".browser.SetupSAML2"
      permission="cmf.ManagePortal"
      layer="isaw.policy.interfaces.IISAWPolicyLayer"
      />

  <!-- Register types that have lead images as supporting cropping -->
  <configure zcml:condition="installed plone.app.imagecropping">
    <class class="Products.ATContentTypes.content.topic.ATTopic">
      <implements interface="plone.app.imagecropping.at.IImageCroppingAT" />
    </class>

    <class class="plone.app.folder.folder.ATFolder">
      <implements interface="plone.app.imagecropping.at.IImageCroppingAT" />
    </class>

    <class class="Products.ATContentTypes.content.document.ATDocument">
      <implements interface="plone.app.imagecropping.at.IImageCroppingAT" />
    </class>

    <class class="Products.ATContentTypes.content.event.ATEvent">
      <implements interface="plone.app.imagecropping.at.IImageCroppingAT" />
    </class>

  </configure>



  <plone:behavior
        name="isaw.policy.IEventIsawBehavior"
        title="Event ISAW Behavior"
        description="Adds event-isaw-related fields to content types"
        provides="isaw.policy.behaviors.IEventISAWBehavior"
    />
  <plone:behavior
        name="isaw.policy.INewsLeadImageISAWBehavior"
        title="News ISAW Lead Image Behavior"
        description="Adds LeadImage plus image_alt fields to content types"
        provides="isaw.policy.behaviors.INewsLeadImageISAWBehavior"
    />

</configure>
